{"ast":null,"code":"var _jsxFileName = \"D:\\\\BlockChain Projects\\\\Auction Dapp Msc Project\\\\auction-dapp\\\\src\\\\App.js\";\nimport './App.css';\nimport Web3 from \"web3\";\nimport Auction from './truffle_abis/Auction.json';\nimport { Component, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  // Load web3 \n\n  async UNSAFE_componentWillMount() {\n    await this.LoadWeb3();\n    await this.LoadBlockChain();\n  }\n  async LoadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert('No Wallet Detected');\n    }\n  }\n  async LoadBlockChain() {\n    const web3 = window.web3;\n    const account = await web3.eth.getAccounts(); // getting account that is connected\n    //this.setState({connected_account:account});\n\n    //Ganache Network ID\n    const networkID = await web3.eth.net.getId();\n\n    //Loading Contract\n    const ContractData = Auction.networks[networkID];\n    if (ContractData) {\n      const cont = new web3.eth.Contract(Auction.abi, ContractData.address);\n      //console.log(\"Conctract: \" , cont);\n      this.setState({\n        auction_contract: cont\n      });\n      const addr = await this.state.auction_contract.methods.GetOwner().call();\n      console.log(\"GOTT: \", addr);\n      console.log(\"state contract: \", this.state.auction_contract);\n    } else {\n      console.log(\"Nod Data\");\n    }\n  }\n\n  // states\n  constructor(props) {\n    super(props);\n    this.state = {\n      auction_contract: {},\n      connected_account: '0x00'\n    };\n  }\n  // React Part\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["Web3","Auction","Component","useEffect","useState","App","UNSAFE_componentWillMount","LoadWeb3","LoadBlockChain","window","ethereum","web3","enable","currentProvider","alert","account","eth","getAccounts","networkID","net","getId","ContractData","networks","cont","Contract","abi","address","setState","auction_contract","addr","state","methods","GetOwner","call","console","log","constructor","props","connected_account","render"],"sources":["D:/BlockChain Projects/Auction Dapp Msc Project/auction-dapp/src/App.js"],"sourcesContent":["import './App.css';\nimport Web3 from \"web3\";\nimport Auction from './truffle_abis/Auction.json';\nimport { Component, useEffect , useState } from 'react';\n\nclass App extends Component {\n\n  // Load web3 \n\n  async UNSAFE_componentWillMount()\n  {\n    await this.LoadWeb3();\n    await this.LoadBlockChain();\n  }\n\n  async LoadWeb3(){\n    if(window.ethereum)\n    {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    }\n    else if(window.web3)\n    {\n      window.web3 = new Web3 (window.web3.currentProvider)\n    }\n    else{\n      window.alert('No Wallet Detected');\n    }\n  }\n  async LoadBlockChain(){\n    const web3 = window.web3\n    const account = await web3.eth.getAccounts(); // getting account that is connected\n    //this.setState({connected_account:account});\n\n    //Ganache Network ID\n    const networkID = await web3.eth.net.getId();\n\n    //Loading Contract\n    const ContractData = Auction.networks[networkID];\n\n    if(ContractData){\n\n      const cont = new web3.eth.Contract(Auction.abi,ContractData.address);\n      //console.log(\"Conctract: \" , cont);\n      this.setState({auction_contract:cont});\n\n\n      const addr = await this.state.auction_contract.methods.GetOwner().call();\n      console.log(\"GOTT: \" , addr );\n    \n      console.log(\"state contract: \" , this.state.auction_contract); \n    }\n    else\n    {\n      console.log(\"Nod Data\");\n    }\n  }\n\n  // states\n  constructor(props){\n    super(props)\n    this.state ={\n      auction_contract: {},\n      connected_account:'0x00'\n    };\n  }\n  // React Part\n  render(){\n    return (\n      <div>\n        <p>Test</p>\n      </div>\n    );\n  }\n  \n}\n\n\nexport default App;\n"],"mappings":";AAAA,OAAO,WAAW;AAClB,OAAOA,IAAI,MAAM,MAAM;AACvB,OAAOC,OAAO,MAAM,6BAA6B;AACjD,SAASC,SAAS,EAAEC,SAAS,EAAGC,QAAQ,QAAQ,OAAO;AAAC;AAExD,MAAMC,GAAG,SAASH,SAAS,CAAC;EAE1B;;EAEA,MAAMI,yBAAyB,GAC/B;IACE,MAAM,IAAI,CAACC,QAAQ,EAAE;IACrB,MAAM,IAAI,CAACC,cAAc,EAAE;EAC7B;EAEA,MAAMD,QAAQ,GAAE;IACd,IAAGE,MAAM,CAACC,QAAQ,EAClB;MACED,MAAM,CAACE,IAAI,GAAG,IAAIX,IAAI,CAACS,MAAM,CAACC,QAAQ,CAAC;MACvC,MAAMD,MAAM,CAACC,QAAQ,CAACE,MAAM,EAAE;IAChC,CAAC,MACI,IAAGH,MAAM,CAACE,IAAI,EACnB;MACEF,MAAM,CAACE,IAAI,GAAG,IAAIX,IAAI,CAAES,MAAM,CAACE,IAAI,CAACE,eAAe,CAAC;IACtD,CAAC,MACG;MACFJ,MAAM,CAACK,KAAK,CAAC,oBAAoB,CAAC;IACpC;EACF;EACA,MAAMN,cAAc,GAAE;IACpB,MAAMG,IAAI,GAAGF,MAAM,CAACE,IAAI;IACxB,MAAMI,OAAO,GAAG,MAAMJ,IAAI,CAACK,GAAG,CAACC,WAAW,EAAE,CAAC,CAAC;IAC9C;;IAEA;IACA,MAAMC,SAAS,GAAG,MAAMP,IAAI,CAACK,GAAG,CAACG,GAAG,CAACC,KAAK,EAAE;;IAE5C;IACA,MAAMC,YAAY,GAAGpB,OAAO,CAACqB,QAAQ,CAACJ,SAAS,CAAC;IAEhD,IAAGG,YAAY,EAAC;MAEd,MAAME,IAAI,GAAG,IAAIZ,IAAI,CAACK,GAAG,CAACQ,QAAQ,CAACvB,OAAO,CAACwB,GAAG,EAACJ,YAAY,CAACK,OAAO,CAAC;MACpE;MACA,IAAI,CAACC,QAAQ,CAAC;QAACC,gBAAgB,EAACL;MAAI,CAAC,CAAC;MAGtC,MAAMM,IAAI,GAAG,MAAM,IAAI,CAACC,KAAK,CAACF,gBAAgB,CAACG,OAAO,CAACC,QAAQ,EAAE,CAACC,IAAI,EAAE;MACxEC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAGN,IAAI,CAAE;MAE7BK,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAG,IAAI,CAACL,KAAK,CAACF,gBAAgB,CAAC;IAC/D,CAAC,MAED;MACEM,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;IACzB;EACF;;EAEA;EACAC,WAAW,CAACC,KAAK,EAAC;IAChB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACP,KAAK,GAAE;MACVF,gBAAgB,EAAE,CAAC,CAAC;MACpBU,iBAAiB,EAAC;IACpB,CAAC;EACH;EACA;EACAC,MAAM,GAAE;IACN,oBACE;MAAA,uBACE;QAAA,UAAG;MAAI;QAAA;QAAA;QAAA;MAAA;IAAI;MAAA;MAAA;MAAA;IAAA,QACP;EAEV;AAEF;AAGA,eAAelC,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}