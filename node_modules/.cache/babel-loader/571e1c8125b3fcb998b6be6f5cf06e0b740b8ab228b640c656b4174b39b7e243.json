{"ast":null,"code":"var _jsxFileName = \"D:\\\\BlockChain Projects\\\\Auction Dapp Msc Project\\\\auction-dapp\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { useEffect } from 'react';\nimport './App.css';\nimport Main from './Main';\nimport Web3 from \"web3\";\nimport Auction from '../truffle_abis/Auction.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  /* LOAD WEB 3 */\n  async UNSAFE_componentWillMount() {\n    await this.LoadWeb3();\n    await this.LoadBlockChain();\n    await this.GetBids_Data();\n  }\n  async LoadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert('No Wallet Detected');\n    }\n  }\n  async LoadBlockChain() {\n    const web3 = window.web3;\n    const account = await web3.eth.getAccounts(); // getting account that is connected\n    this.setState({\n      connected_account: account\n    });\n\n    //Ganache Network ID\n    const networkID = await web3.eth.net.getId();\n\n    //Loading Contract\n    const ContractData = Auction.networks[networkID];\n    if (ContractData) {\n      const cont = new web3.eth.Contract(Auction.abi, ContractData.address);\n      // Set contract to state here\n      this.setState({\n        auction_contract: cont\n      });\n      console.log(\"Contract: \", this.state.auction_contract);\n      this.GetAuctionOwner();\n    }\n    this.setState({\n      loading: false\n    });\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.Timer != this.state.Timer) {\n      const new_v = this.state.Timer;\n      new_v >= 0 ? localStorage.setItem('Timer', String(new_v)) : localStorage.setItem('Timer', String(30));\n      this.UpdateTimer();\n    }\n  }\n  async GetAuctionOwner() {\n    const addr = await this.state.auction_contract.methods.GetOwner().call();\n    this.setState({\n      auction_owner: addr\n    });\n  }\n  constructor(props) {\n    super(props);\n    this.UpdateTimer = () => {\n      const getTimerFromLocalStorage = Number(localStorage.getItem('Timer'));\n      Number.isInteger(getTimerFromLocalStorage) ? this.setState({\n        Timer: getTimerFromLocalStorage\n      }) : this.setState({\n        Timer: 30\n      });\n    };\n    this.PlaceBid = async amount => {\n      const amount_wei = await Web3.utils.toWei(amount, 'ether');\n      if (amount_wei > this.state.curr_amount) {\n        await this.state.auction_contract.methods.Bid(amount_wei).send({\n          from: this.state.connected_account.toString(),\n          value: amount_wei\n        }).on('transactionHash', hash => {});\n        this.GetBids_Data();\n      } else {\n        window.alert('Bid Amount is Low then the Current Highest');\n      }\n    };\n    this.SendEth_ToOwner = async () => {\n      if (this.state.connected_account == this.state.auction_owner) {\n        await this.state.auction_contract.methods.TransferEthToOwner().send({\n          from: this.state.connected_account.toString()\n        });\n      } else {\n        window.alert(\"Only Auction Owner Can Claim\");\n      }\n    };\n    this.state = {\n      auction_owner: '0x0',\n      connected_account: '0x000',\n      bid_placed: 0,\n      prev_addr: '0x0000000000000',\n      curr_addr: '0x0000000000000',\n      prev_amount: '0',\n      curr_amount: '0',\n      loading: true,\n      Timer: Number(localStorage.getItem('Timer')),\n      auction_contract: {}\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","useEffect","Main","Web3","Auction","App","UNSAFE_componentWillMount","LoadWeb3","LoadBlockChain","GetBids_Data","window","ethereum","web3","enable","currentProvider","alert","account","eth","getAccounts","setState","connected_account","networkID","net","getId","ContractData","networks","cont","Contract","abi","address","auction_contract","console","log","state","GetAuctionOwner","loading","componentDidUpdate","prevProps","prevState","Timer","new_v","localStorage","setItem","String","UpdateTimer","addr","methods","GetOwner","call","auction_owner","constructor","props","getTimerFromLocalStorage","Number","getItem","isInteger","PlaceBid","amount","amount_wei","utils","toWei","curr_amount","Bid","send","from","toString","value","on","hash","SendEth_ToOwner","TransferEthToOwner","bid_placed","prev_addr","curr_addr","prev_amount","render"],"sources":["D:/BlockChain Projects/Auction Dapp Msc Project/auction-dapp/src/App.js"],"sourcesContent":["import React, {Component} from 'react';\nimport { useEffect } from 'react';\nimport './App.css';\nimport Main from './Main';\nimport Web3 from \"web3\";\nimport Auction from '../truffle_abis/Auction.json';\n\n\nclass App extends Component {\n\n  /* LOAD WEB 3 */\n    async UNSAFE_componentWillMount(){\n      await this.LoadWeb3();\n      await this.LoadBlockChain();\n      await this.GetBids_Data();\n    }\n\n   \n  async LoadWeb3(){\n    if(window.ethereum)\n    {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    }\n    else if(window.web3)\n    {\n      window.web3 = new Web3 (window.web3.currentProvider)\n    }\n    else{\n      window.alert('No Wallet Detected');\n    }\n  }\n\n  async LoadBlockChain(){\n    const web3 = window.web3\n    const account = await web3.eth.getAccounts(); // getting account that is connected\n    this.setState({connected_account:account});\n\n    //Ganache Network ID\n    const networkID = await web3.eth.net.getId();\n\n    //Loading Contract\n    const ContractData = Auction.networks[networkID];\n\n    if(ContractData){\n      const cont = new web3.eth.Contract(Auction.abi,ContractData.address);\n      // Set contract to state here\n      this.setState({auction_contract: cont});\n\n      console.log(\"Contract: \"  , this.state.auction_contract);\n      this.GetAuctionOwner();\n     \n\n    }\n    this.setState({loading:false});\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    if (prevState.Timer != this.state.Timer)\n      { \n        const new_v = this.state.Timer;\n        new_v >= 0 ?  localStorage.setItem('Timer' , String(new_v)) : localStorage.setItem('Timer' , String(30));\n        \n        this.UpdateTimer();\n        \n      }\n    }\n\n  UpdateTimer = () =>{\n    const getTimerFromLocalStorage = Number(localStorage.getItem('Timer'));\n    \n    Number.isInteger(getTimerFromLocalStorage)? this.setState({Timer: getTimerFromLocalStorage}) : \n      this.setState({Timer:30})\n  }\n    PlaceBid = async (amount)=>{\n        const amount_wei = await Web3.utils.toWei(amount,'ether');\n        if(amount_wei > this.state.curr_amount)\n        {\n          await this.state.auction_contract.methods.Bid(amount_wei).send({\n            from:this.state.connected_account.toString(),\n            value: amount_wei\n          }).on('transactionHash',(hash)=>{});\n              \n          this.GetBids_Data();\n        }\n        else{\n          window.alert('Bid Amount is Low then the Current Highest');\n        }\n      }\n     SendEth_ToOwner = async()=>{\n      if(this.state.connected_account == this.state.auction_owner)\n      {\n        await this.state.auction_contract.methods.TransferEthToOwner().send({from:this.state.connected_account.toString()});\n      }\n      else{\n        window.alert(\"Only Auction Owner Can Claim\");\n      }\n    }\n\n    \n    \n    async GetAuctionOwner(){\n    const addr = await this.state.auction_contract.methods.GetOwner().call();\n    this.setState({auction_owner:addr});\n    }\n\n\n\n  constructor(props){\n    super(props)\n    this.state = {\n      auction_owner:'0x0',\n      connected_account:'0x000',\n      bid_placed:0,\n      prev_addr:'0x0000000000000',\n      curr_addr:'0x0000000000000',\n      prev_amount:'0',\n      curr_amount:'0',\n      loading : true,\n      Timer : Number(localStorage.getItem('Timer')),\n      auction_contract : {}\n\n    };\n    \n  }\n  render(){\n   \n    \n    return (\n      <div>\n        \n          \n      </div>\n      \n    );\n    \n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}