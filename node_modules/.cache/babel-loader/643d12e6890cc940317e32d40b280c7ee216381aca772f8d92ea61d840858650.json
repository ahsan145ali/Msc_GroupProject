{"ast":null,"code":"var _jsxFileName = \"D:\\\\BlockChain Projects\\\\Auction Dapp Msc Project\\\\auction-dapp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Web3 from \"web3\";\nimport Auction from './truffle_abis/Auction.json';\nimport { Component, useEffect, useState } from 'react';\n/*\nclass App extends Component {\n\n  // Load web3 \n\n  async UNSAFE_componentWillMount()\n  {\n    await this.LoadWeb3();\n    await this.LoadBlockChain();\n  }\n\n  async LoadWeb3(){\n    if(window.ethereum)\n    {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    }\n    else if(window.web3)\n    {\n      window.web3 = new Web3 (window.web3.currentProvider)\n    }\n    else{\n      window.alert('No Wallet Detected');\n    }\n  }\n  async LoadBlockChain(){\n    const web3 = window.web3\n    const account = await web3.eth.getAccounts(); // getting account that is connected\n    //this.setState({connected_account:account});\n\n    //Ganache Network ID\n    const networkID = await web3.eth.net.getId();\n\n    //Loading Contract\n    const ContractData = Auction.networks[networkID];\n\n    if(ContractData){\n      console.log(\"HERE\");\n      const cont = new web3.eth.Contract(Auction.abi,ContractData.address);\n     \n      const va = await cont.methods.GetVal().call();\n      console.log(\"VAL: \" + va);\n    }\n    else\n    {\n      console.log(\"Nod Data\");\n    }\n  }\n\n  // states\n  constructor(props){\n    super(props)\n    this.state ={\n\n    };\n  }\n  // React Part\n  render(){\n    return (\n      <div>\n        <p>Test</p>\n      </div>\n    );\n  }\n  \n}*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  useEffect(() => {\n    //await this.LoadWeb3();\n    async function LoadWeb3() {\n      if (window.ethereum) {\n        window.web3 = new Web3(window.ethereum);\n        await window.ethereum.enable();\n      } else if (window.web3) {\n        window.web3 = new Web3(window.web3.currentProvider);\n      } else {\n        window.alert('No Wallet Detected');\n      }\n    }\n    async function LoadBlockChain() {\n      const web3 = window.web3;\n      const account = await web3.eth.getAccounts(); // getting account that is connected\n      //this.setState({connected_account:account});\n      setstates;\n\n      //Ganache Network ID\n      const networkID = await web3.eth.net.getId();\n\n      //Loading Contract\n      const ContractData = Auction.networks[networkID];\n      if (ContractData) {\n        console.log(\"HERE\");\n        const cont = new web3.eth.Contract(Auction.abi, ContractData.address);\n        const va = await cont.methods.GetVal().call();\n        console.log(\"VAL: \" + va);\n      } else {\n        console.log(\"Nod Data\");\n      }\n    }\n    LoadWeb3();\n    LoadBlockChain();\n  }, []);\n  const [states, setstates] = useState({\n    accounts: \"\",\n    contract: \"\"\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"APPLICATION\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"QIW2xJdAxyb7CamGdQ5fRnLqENI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Web3","Auction","Component","useEffect","useState","App","LoadWeb3","window","ethereum","web3","enable","currentProvider","alert","LoadBlockChain","account","eth","getAccounts","setstates","networkID","net","getId","ContractData","networks","console","log","cont","Contract","abi","address","va","methods","GetVal","call","states","accounts","contract"],"sources":["D:/BlockChain Projects/Auction Dapp Msc Project/auction-dapp/src/App.js"],"sourcesContent":["import './App.css';\nimport Web3 from \"web3\";\nimport Auction from './truffle_abis/Auction.json';\nimport { Component, useEffect , useState } from 'react';\n/*\nclass App extends Component {\n\n  // Load web3 \n\n  async UNSAFE_componentWillMount()\n  {\n    await this.LoadWeb3();\n    await this.LoadBlockChain();\n  }\n\n  async LoadWeb3(){\n    if(window.ethereum)\n    {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    }\n    else if(window.web3)\n    {\n      window.web3 = new Web3 (window.web3.currentProvider)\n    }\n    else{\n      window.alert('No Wallet Detected');\n    }\n  }\n  async LoadBlockChain(){\n    const web3 = window.web3\n    const account = await web3.eth.getAccounts(); // getting account that is connected\n    //this.setState({connected_account:account});\n\n    //Ganache Network ID\n    const networkID = await web3.eth.net.getId();\n\n    //Loading Contract\n    const ContractData = Auction.networks[networkID];\n\n    if(ContractData){\n      console.log(\"HERE\");\n      const cont = new web3.eth.Contract(Auction.abi,ContractData.address);\n     \n      const va = await cont.methods.GetVal().call();\n      console.log(\"VAL: \" + va);\n    }\n    else\n    {\n      console.log(\"Nod Data\");\n    }\n  }\n\n  // states\n  constructor(props){\n    super(props)\n    this.state ={\n\n    };\n  }\n  // React Part\n  render(){\n    return (\n      <div>\n        <p>Test</p>\n      </div>\n    );\n  }\n  \n}*/\n\nfunction App(){\n  useEffect(()=>{\n\n    //await this.LoadWeb3();\n    async function LoadWeb3(){\n      if(window.ethereum)\n      {\n        window.web3 = new Web3(window.ethereum);\n        await window.ethereum.enable();\n      }\n      else if(window.web3)\n      {\n        window.web3 = new Web3 (window.web3.currentProvider)\n      }\n      else{\n        window.alert('No Wallet Detected');\n      }\n    }\n    async function LoadBlockChain(){\n      const web3 = window.web3\n      const account = await web3.eth.getAccounts(); // getting account that is connected\n      //this.setState({connected_account:account});\n      setstates\n  \n      //Ganache Network ID\n      const networkID = await web3.eth.net.getId();\n  \n      //Loading Contract\n      const ContractData = Auction.networks[networkID];\n  \n      if(ContractData){\n        console.log(\"HERE\");\n        const cont = new web3.eth.Contract(Auction.abi,ContractData.address);\n       \n        const va = await cont.methods.GetVal().call();\n        console.log(\"VAL: \" + va);\n      }\n      else\n      {\n        console.log(\"Nod Data\");\n      }\n    }\n    LoadWeb3();\n    LoadBlockChain();\n  \n  },[])\n  const [states,setstates] = useState({\n    accounts : \"\",\n    contract: \"\"\n  })\n  return(\n    <div>\n      APPLICATION\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,IAAI,MAAM,MAAM;AACvB,OAAOC,OAAO,MAAM,6BAA6B;AACjD,SAASC,SAAS,EAAEC,SAAS,EAAGC,QAAQ,QAAQ,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjEA;AAmEA,SAASC,GAAG,GAAE;EAAA;EACZF,SAAS,CAAC,MAAI;IAEZ;IACA,eAAeG,QAAQ,GAAE;MACvB,IAAGC,MAAM,CAACC,QAAQ,EAClB;QACED,MAAM,CAACE,IAAI,GAAG,IAAIT,IAAI,CAACO,MAAM,CAACC,QAAQ,CAAC;QACvC,MAAMD,MAAM,CAACC,QAAQ,CAACE,MAAM,EAAE;MAChC,CAAC,MACI,IAAGH,MAAM,CAACE,IAAI,EACnB;QACEF,MAAM,CAACE,IAAI,GAAG,IAAIT,IAAI,CAAEO,MAAM,CAACE,IAAI,CAACE,eAAe,CAAC;MACtD,CAAC,MACG;QACFJ,MAAM,CAACK,KAAK,CAAC,oBAAoB,CAAC;MACpC;IACF;IACA,eAAeC,cAAc,GAAE;MAC7B,MAAMJ,IAAI,GAAGF,MAAM,CAACE,IAAI;MACxB,MAAMK,OAAO,GAAG,MAAML,IAAI,CAACM,GAAG,CAACC,WAAW,EAAE,CAAC,CAAC;MAC9C;MACAC,SAAS;;MAET;MACA,MAAMC,SAAS,GAAG,MAAMT,IAAI,CAACM,GAAG,CAACI,GAAG,CAACC,KAAK,EAAE;;MAE5C;MACA,MAAMC,YAAY,GAAGpB,OAAO,CAACqB,QAAQ,CAACJ,SAAS,CAAC;MAEhD,IAAGG,YAAY,EAAC;QACdE,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;QACnB,MAAMC,IAAI,GAAG,IAAIhB,IAAI,CAACM,GAAG,CAACW,QAAQ,CAACzB,OAAO,CAAC0B,GAAG,EAACN,YAAY,CAACO,OAAO,CAAC;QAEpE,MAAMC,EAAE,GAAG,MAAMJ,IAAI,CAACK,OAAO,CAACC,MAAM,EAAE,CAACC,IAAI,EAAE;QAC7CT,OAAO,CAACC,GAAG,CAAC,OAAO,GAAGK,EAAE,CAAC;MAC3B,CAAC,MAED;QACEN,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;MACzB;IACF;IACAlB,QAAQ,EAAE;IACVO,cAAc,EAAE;EAElB,CAAC,EAAC,EAAE,CAAC;EACL,MAAM,CAACoB,MAAM,EAAChB,SAAS,CAAC,GAAGb,QAAQ,CAAC;IAClC8B,QAAQ,EAAG,EAAE;IACbC,QAAQ,EAAE;EACZ,CAAC,CAAC;EACF,oBACE;IAAA,UAAK;EAEL;IAAA;IAAA;IAAA;EAAA,QAAM;AAEV;AAAC,GAvDQ9B,GAAG;AAAA,KAAHA,GAAG;AAyDZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}