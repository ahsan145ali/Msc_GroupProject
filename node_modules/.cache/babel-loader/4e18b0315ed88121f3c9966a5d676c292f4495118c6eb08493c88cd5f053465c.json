{"ast":null,"code":"import { createStore } from \"redux\";\nconst redux = require('redux');\nconst initialState = {\n  auction_owner: \"0x99\",\n  auction_contract: {},\n  connected_account: \"0x11\"\n};\nconst TaskReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  if (action.type === \"setAuctionOwner\") {\n    state.auction_owner = action.obj;\n  } else if (action.type === \"setAuctionContract\") {\n    state.auction_contract = action.obj;\n  } else if (action.type === \"setConnectedAccount\") {\n    state.connected_account = action.obj;\n  }\n  return state;\n};\n_c = TaskReducer;\nconst store = createStore(TaskReducer);\nconst TaskSubscriber = () => {};\n_c2 = TaskSubscriber;\nexport default store;\nvar _c, _c2;\n$RefreshReg$(_c, \"TaskReducer\");\n$RefreshReg$(_c2, \"TaskSubscriber\");","map":{"version":3,"names":["createStore","redux","require","initialState","auction_owner","auction_contract","connected_account","TaskReducer","state","action","type","obj","store","TaskSubscriber"],"sources":["D:/BlockChain Projects/Auction Dapp Msc Project/auction-dapp/src/Components/Redux/ReduxMain.js"],"sourcesContent":["import { createStore } from \"redux\";\r\nconst redux = require('redux');\r\n\r\nconst initialState = {\r\n    auction_owner:\"0x99\",\r\n    auction_contract:{},\r\n    connected_account:\"0x11\"\r\n}\r\nconst TaskReducer = (state = initialState,action)=>\r\n{\r\n    if(action.type===\"setAuctionOwner\"){\r\n     \r\n        \r\n        state.auction_owner = action.obj; \r\n        \r\n       \r\n    }\r\n    else if(action.type===\"setAuctionContract\"){\r\n\r\n        state.auction_contract = action.obj;\r\n        \r\n    }\r\n    else if(action.type===\"setConnectedAccount\"){\r\n\r\n        state.connected_account = action.obj;\r\n        \r\n    }\r\n    return state;\r\n};\r\n\r\nconst store = createStore(TaskReducer);\r\nconst TaskSubscriber = () =>{}\r\n\r\nexport default store;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC;AAE9B,MAAMC,YAAY,GAAG;EACjBC,aAAa,EAAC,MAAM;EACpBC,gBAAgB,EAAC,CAAC,CAAC;EACnBC,iBAAiB,EAAC;AACtB,CAAC;AACD,MAAMC,WAAW,GAAG,YACpB;EAAA,IADqBC,KAAK,uEAAGL,YAAY;EAAA,IAACM,MAAM;EAE5C,IAAGA,MAAM,CAACC,IAAI,KAAG,iBAAiB,EAAC;IAG/BF,KAAK,CAACJ,aAAa,GAAGK,MAAM,CAACE,GAAG;EAGpC,CAAC,MACI,IAAGF,MAAM,CAACC,IAAI,KAAG,oBAAoB,EAAC;IAEvCF,KAAK,CAACH,gBAAgB,GAAGI,MAAM,CAACE,GAAG;EAEvC,CAAC,MACI,IAAGF,MAAM,CAACC,IAAI,KAAG,qBAAqB,EAAC;IAExCF,KAAK,CAACF,iBAAiB,GAAGG,MAAM,CAACE,GAAG;EAExC;EACA,OAAOH,KAAK;AAChB,CAAC;AAAC,KApBID,WAAW;AAsBjB,MAAMK,KAAK,GAAGZ,WAAW,CAACO,WAAW,CAAC;AACtC,MAAMM,cAAc,GAAG,MAAK,CAAC,CAAC;AAAA,MAAxBA,cAAc;AAEpB,eAAeD,KAAK;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}