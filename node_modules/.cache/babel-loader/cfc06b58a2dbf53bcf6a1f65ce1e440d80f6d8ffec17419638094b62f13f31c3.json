{"ast":null,"code":"var _jsxFileName = \"D:\\\\BlockChain Projects\\\\Auction Dapp Msc Project\\\\auction-dapp\\\\src\\\\App.js\";\nimport './App.css';\nimport Web3 from \"web3\";\nimport Auction from './truffle_abis/Auction.json';\nimport { Component, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  /* Load web3 */\n\n  async UNSAFE_componentWillMount() {\n    await this.LoadWeb3();\n  }\n  async LoadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    }\n  }\n  async LoadBlockChain() {\n    const web3 = window.web3;\n    const account = await web3.eth.getAccounts(); // get connected account\n    console.log(account); // set this to a state\n\n    // Ganache network ID\n    const networkID = await web3.eth.net.getID();\n\n    // Loading Contract\n    const ContractData = Auction.networks[networkID];\n    if (contractData) {\n      const cont = new web3.eth.ContractData();\n    }\n  }\n  // React Part\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["Web3","Auction","Component","useEffect","App","UNSAFE_componentWillMount","LoadWeb3","window","ethereum","web3","enable","currentProvider","LoadBlockChain","account","eth","getAccounts","console","log","networkID","net","getID","ContractData","networks","contractData","cont","render"],"sources":["D:/BlockChain Projects/Auction Dapp Msc Project/auction-dapp/src/App.js"],"sourcesContent":["import './App.css';\nimport Web3 from \"web3\";\nimport Auction from './truffle_abis/Auction.json';\nimport { Component, useEffect } from 'react';\nclass App extends Component {\n\n  /* Load web3 */\n\n  async UNSAFE_componentWillMount()\n  {\n    await this.LoadWeb3();\n  }\n\n  async LoadWeb3(){\n    if(window.ethereum)\n    {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    }\n    else if(window.web3)\n    {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n  }\n  async LoadBlockChain()\n  {\n    const web3 = window.web3;\n    const account = await web3.eth.getAccounts(); // get connected account\n    console.log(account) // set this to a state\n\n    // Ganache network ID\n    const networkID = await web3.eth.net.getID();\n\n    // Loading Contract\n    const ContractData = Auction.networks[networkID];\n\n    if(contractData)\n    {\n      const cont = new web3.eth.ContractData\n    }\n  }\n  // React Part\n  render(){\n    return (\n      <div>\n        <p>Test</p>\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n"],"mappings":";AAAA,OAAO,WAAW;AAClB,OAAOA,IAAI,MAAM,MAAM;AACvB,OAAOC,OAAO,MAAM,6BAA6B;AACjD,SAASC,SAAS,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAC7C,MAAMC,GAAG,SAASF,SAAS,CAAC;EAE1B;;EAEA,MAAMG,yBAAyB,GAC/B;IACE,MAAM,IAAI,CAACC,QAAQ,EAAE;EACvB;EAEA,MAAMA,QAAQ,GAAE;IACd,IAAGC,MAAM,CAACC,QAAQ,EAClB;MACED,MAAM,CAACE,IAAI,GAAG,IAAIT,IAAI,CAACO,MAAM,CAACC,QAAQ,CAAC;MACvC,MAAMD,MAAM,CAACC,QAAQ,CAACE,MAAM,EAAE;IAChC,CAAC,MACI,IAAGH,MAAM,CAACE,IAAI,EACnB;MACEF,MAAM,CAACE,IAAI,GAAG,IAAIT,IAAI,CAACO,MAAM,CAACE,IAAI,CAACE,eAAe,CAAC;IACrD;EACF;EACA,MAAMC,cAAc,GACpB;IACE,MAAMH,IAAI,GAAGF,MAAM,CAACE,IAAI;IACxB,MAAMI,OAAO,GAAG,MAAMJ,IAAI,CAACK,GAAG,CAACC,WAAW,EAAE,CAAC,CAAC;IAC9CC,OAAO,CAACC,GAAG,CAACJ,OAAO,CAAC,EAAC;;IAErB;IACA,MAAMK,SAAS,GAAG,MAAMT,IAAI,CAACK,GAAG,CAACK,GAAG,CAACC,KAAK,EAAE;;IAE5C;IACA,MAAMC,YAAY,GAAGpB,OAAO,CAACqB,QAAQ,CAACJ,SAAS,CAAC;IAEhD,IAAGK,YAAY,EACf;MACE,MAAMC,IAAI,GAAG,IAAIf,IAAI,CAACK,GAAG,CAACO,YAAY;IACxC;EACF;EACA;EACAI,MAAM,GAAE;IACN,oBACE;MAAA,uBACE;QAAA,UAAG;MAAI;QAAA;QAAA;QAAA;MAAA;IAAI;MAAA;MAAA;MAAA;IAAA,QACP;EAEV;AAEF;AAEA,eAAerB,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}