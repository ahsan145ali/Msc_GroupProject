{"ast":null,"code":"var _jsxFileName = \"D:\\\\BlockChain Projects\\\\Auction Dapp Msc Project\\\\auction-dapp\\\\src\\\\App.js\";\nimport './App.css';\nimport Web3 from \"web3\";\nimport Auction from './truffle_abis/Auction.json';\nimport { Component, useEffect } from 'react';\n/*\nclass App extends Component {\n\n  // Load web3 \n\n  async UNSAFE_componentWillMount()\n  {\n    await this.LoadWeb3();\n    await this.LoadBlockChain();\n  }\n\n  async LoadWeb3(){\n    if(window.ethereum)\n    {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    }\n    else if(window.web3)\n    {\n      window.web3 = new Web3 (window.web3.currentProvider)\n    }\n    else{\n      window.alert('No Wallet Detected');\n    }\n  }\n  async LoadBlockChain(){\n    const web3 = window.web3\n    const account = await web3.eth.getAccounts(); // getting account that is connected\n    //this.setState({connected_account:account});\n\n    //Ganache Network ID\n    const networkID = await web3.eth.net.getId();\n\n    //Loading Contract\n    const ContractData = Auction.networks[networkID];\n\n    if(ContractData){\n      console.log(\"HERE\");\n      const cont = new web3.eth.Contract(Auction.abi,ContractData.address);\n     \n      const va = await cont.methods.GetVal().call();\n      console.log(\"VAL: \" + va);\n    }\n    else\n    {\n      console.log(\"Nod Data\");\n    }\n  }\n\n  // states\n  constructor(props){\n    super(props)\n    this.state ={\n\n    };\n  }\n  // React Part\n  render(){\n    return (\n      <div>\n        <p>Test</p>\n      </div>\n    );\n  }\n  \n}*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Web3","Auction","Component","useEffect","App"],"sources":["D:/BlockChain Projects/Auction Dapp Msc Project/auction-dapp/src/App.js"],"sourcesContent":["import './App.css';\nimport Web3 from \"web3\";\nimport Auction from './truffle_abis/Auction.json';\nimport { Component, useEffect } from 'react';\n/*\nclass App extends Component {\n\n  // Load web3 \n\n  async UNSAFE_componentWillMount()\n  {\n    await this.LoadWeb3();\n    await this.LoadBlockChain();\n  }\n\n  async LoadWeb3(){\n    if(window.ethereum)\n    {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    }\n    else if(window.web3)\n    {\n      window.web3 = new Web3 (window.web3.currentProvider)\n    }\n    else{\n      window.alert('No Wallet Detected');\n    }\n  }\n  async LoadBlockChain(){\n    const web3 = window.web3\n    const account = await web3.eth.getAccounts(); // getting account that is connected\n    //this.setState({connected_account:account});\n\n    //Ganache Network ID\n    const networkID = await web3.eth.net.getId();\n\n    //Loading Contract\n    const ContractData = Auction.networks[networkID];\n\n    if(ContractData){\n      console.log(\"HERE\");\n      const cont = new web3.eth.Contract(Auction.abi,ContractData.address);\n     \n      const va = await cont.methods.GetVal().call();\n      console.log(\"VAL: \" + va);\n    }\n    else\n    {\n      console.log(\"Nod Data\");\n    }\n  }\n\n  // states\n  constructor(props){\n    super(props)\n    this.state ={\n\n    };\n  }\n  // React Part\n  render(){\n    return (\n      <div>\n        <p>Test</p>\n      </div>\n    );\n  }\n  \n}*/\n\nfunction App(){\n  return(\n    <div>\n      \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAO,WAAW;AAClB,OAAOA,IAAI,MAAM,MAAM;AACvB,OAAOC,OAAO,MAAM,6BAA6B;AACjD,SAASC,SAAS,EAAEC,SAAS,QAAQ,OAAO;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjEA;AAmEA,SAASC,GAAG,GAAE;EACZ,oBACE;IAAA;IAAA;IAAA;EAAA,QAEM;AAEV;AAAC,KANQA,GAAG;AAQZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}