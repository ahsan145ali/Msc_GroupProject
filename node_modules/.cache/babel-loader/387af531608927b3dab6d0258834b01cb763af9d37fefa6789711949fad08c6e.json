{"ast":null,"code":"var _jsxFileName = \"D:\\\\BlockChain Projects\\\\Auction Dapp Msc Project\\\\auction-dapp\\\\src\\\\App.js\";\nimport './App.css';\nimport Web3 from \"web3\";\nimport Auction from './truffle_abis/Auction.json';\nimport { Component, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  /* Load web3 */\n\n  async UNSAFE_componentWillMount() {\n    await this.LoadWeb3();\n    await this.LoadBlockChain();\n  }\n  async LoadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert('No Wallet Detected');\n    }\n  }\n  async LoadBlockChain() {\n    const web3 = window.web3;\n    const account = await web3.eth.getAccounts(); // getting account that is connected\n    this.setState({\n      connected_account: account\n    });\n\n    //Ganache Network ID\n    const networkID = await web3.eth.net.getId();\n\n    //Loading Contract\n    const ContractData = Auction.networks[networkID];\n    if (ContractData) {\n      const cont = new web3.eth.Contract(Auction.abi, ContractData.address);\n      // Set contract to state here\n      this.setState({\n        auction_contract: cont\n      });\n      this.GetAuctionOwner();\n    }\n    this.setState({\n      loading: false\n    });\n  }\n  // React Part\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["Web3","Auction","Component","useEffect","App","UNSAFE_componentWillMount","LoadWeb3","LoadBlockChain","window","ethereum","web3","enable","currentProvider","alert","account","eth","getAccounts","setState","connected_account","networkID","net","getId","ContractData","networks","cont","Contract","abi","address","auction_contract","GetAuctionOwner","loading","render"],"sources":["D:/BlockChain Projects/Auction Dapp Msc Project/auction-dapp/src/App.js"],"sourcesContent":["import './App.css';\nimport Web3 from \"web3\";\nimport Auction from './truffle_abis/Auction.json';\nimport { Component, useEffect } from 'react';\nclass App extends Component {\n\n  /* Load web3 */\n\n  async UNSAFE_componentWillMount()\n  {\n    await this.LoadWeb3();\n    await this.LoadBlockChain();\n  }\n\n  async LoadWeb3(){\n    if(window.ethereum)\n    {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    }\n    else if(window.web3)\n    {\n      window.web3 = new Web3 (window.web3.currentProvider)\n    }\n    else{\n      window.alert('No Wallet Detected');\n    }\n  }\n  async LoadBlockChain(){\n    const web3 = window.web3\n    const account = await web3.eth.getAccounts(); // getting account that is connected\n    this.setState({connected_account:account});\n\n    //Ganache Network ID\n    const networkID = await web3.eth.net.getId();\n\n    //Loading Contract\n    const ContractData = Auction.networks[networkID];\n\n    if(ContractData){\n      const cont = new web3.eth.Contract(Auction.abi,ContractData.address);\n      // Set contract to state here\n      this.setState({auction_contract: cont});\n      this.GetAuctionOwner();\n     \n\n    }\n    this.setState({loading:false});\n  }\n  // React Part\n  render(){\n    return (\n      <div>\n        <p>Test</p>\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n"],"mappings":";AAAA,OAAO,WAAW;AAClB,OAAOA,IAAI,MAAM,MAAM;AACvB,OAAOC,OAAO,MAAM,6BAA6B;AACjD,SAASC,SAAS,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAC7C,MAAMC,GAAG,SAASF,SAAS,CAAC;EAE1B;;EAEA,MAAMG,yBAAyB,GAC/B;IACE,MAAM,IAAI,CAACC,QAAQ,EAAE;IACrB,MAAM,IAAI,CAACC,cAAc,EAAE;EAC7B;EAEA,MAAMD,QAAQ,GAAE;IACd,IAAGE,MAAM,CAACC,QAAQ,EAClB;MACED,MAAM,CAACE,IAAI,GAAG,IAAIV,IAAI,CAACQ,MAAM,CAACC,QAAQ,CAAC;MACvC,MAAMD,MAAM,CAACC,QAAQ,CAACE,MAAM,EAAE;IAChC,CAAC,MACI,IAAGH,MAAM,CAACE,IAAI,EACnB;MACEF,MAAM,CAACE,IAAI,GAAG,IAAIV,IAAI,CAAEQ,MAAM,CAACE,IAAI,CAACE,eAAe,CAAC;IACtD,CAAC,MACG;MACFJ,MAAM,CAACK,KAAK,CAAC,oBAAoB,CAAC;IACpC;EACF;EACA,MAAMN,cAAc,GAAE;IACpB,MAAMG,IAAI,GAAGF,MAAM,CAACE,IAAI;IACxB,MAAMI,OAAO,GAAG,MAAMJ,IAAI,CAACK,GAAG,CAACC,WAAW,EAAE,CAAC,CAAC;IAC9C,IAAI,CAACC,QAAQ,CAAC;MAACC,iBAAiB,EAACJ;IAAO,CAAC,CAAC;;IAE1C;IACA,MAAMK,SAAS,GAAG,MAAMT,IAAI,CAACK,GAAG,CAACK,GAAG,CAACC,KAAK,EAAE;;IAE5C;IACA,MAAMC,YAAY,GAAGrB,OAAO,CAACsB,QAAQ,CAACJ,SAAS,CAAC;IAEhD,IAAGG,YAAY,EAAC;MACd,MAAME,IAAI,GAAG,IAAId,IAAI,CAACK,GAAG,CAACU,QAAQ,CAACxB,OAAO,CAACyB,GAAG,EAACJ,YAAY,CAACK,OAAO,CAAC;MACpE;MACA,IAAI,CAACV,QAAQ,CAAC;QAACW,gBAAgB,EAAEJ;MAAI,CAAC,CAAC;MACvC,IAAI,CAACK,eAAe,EAAE;IAGxB;IACA,IAAI,CAACZ,QAAQ,CAAC;MAACa,OAAO,EAAC;IAAK,CAAC,CAAC;EAChC;EACA;EACAC,MAAM,GAAE;IACN,oBACE;MAAA,uBACE;QAAA,UAAG;MAAI;QAAA;QAAA;QAAA;MAAA;IAAI;MAAA;MAAA;MAAA;IAAA,QACP;EAEV;AAEF;AAEA,eAAe3B,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}