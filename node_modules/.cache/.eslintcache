[{"D:\\BlockChain Projects\\Auction Dapp Msc Project\\auction-dapp\\src\\index.js":"1","D:\\BlockChain Projects\\Auction Dapp Msc Project\\auction-dapp\\src\\App.js":"2","D:\\BlockChain Projects\\Auction Dapp Msc Project\\auction-dapp\\src\\Components\\Redux\\ReduxMain.js":"3","D:\\BlockChain Projects\\Auction Dapp Msc Project\\auction-dapp\\src\\Components\\Navbar.js":"4","D:\\BlockChain Projects\\Auction Dapp Msc Project\\auction-dapp\\src\\Components\\Main.js":"5"},{"size":333,"mtime":1675536529410,"results":"6","hashOfConfig":"7"},{"size":2882,"mtime":1675537252096,"results":"8","hashOfConfig":"7"},{"size":721,"mtime":1675446251291,"results":"9","hashOfConfig":"7"},{"size":501,"mtime":1675536506655,"results":"10","hashOfConfig":"7"},{"size":187,"mtime":1675535463669,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1uvb2ep",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\BlockChain Projects\\Auction Dapp Msc Project\\auction-dapp\\src\\index.js",[],[],"D:\\BlockChain Projects\\Auction Dapp Msc Project\\auction-dapp\\src\\App.js",["28","29"],[],"\nimport Web3 from \"web3\";\nimport Auction from './truffle_abis/Auction.json';\nimport { Component} from 'react';\nimport { connect } from \"react-redux\";\nimport Main from \"./Components/Main\";\nclass App extends Component{\n\n  async UNSAFE_componentWillMount(){\n    await this.LoadWeb3();\n    await this.LoadBlockChain();\n  }\n    LoadWeb3 = async()=>{\n    if(window.ethereum)\n    {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    }\n    else if(window.web3)\n    {\n      window.web3 = new Web3 (window.web3.currentProvider)\n    }\n    else{\n      window.alert('No Wallet Detected');\n    }\n  }\n\n   LoadBlockChain=async()=>{\n     \n    const web3 = window.web3\n    const account = await web3.eth.getAccounts(); // getting account that is connected\n   \n    this.setState({connected_account:account}); // set current metamask account to state\n    this.props.Redux_setConnectedAccount(\"setConnectedAccount\",account); // save to Redux\n\n    //Ganache Network ID\n    const networkID = await web3.eth.net.getId();\n\n    //Loading Contract\n    const ContractData = Auction.networks[networkID];\n    \n    if(ContractData){\n      const cont_addr = new web3.eth.Contract(Auction.abi,ContractData.address);\n      this.setState(this.state.auction_contract=cont_addr); // get contract and store it to state\n      this.props.Redux_setContract(\"setAuctionContract\",cont_addr); // save to Redux\n      this.GetAuctionOwner(); // get the address of the account that deployed the contract\n      this.setState({loading : false});\n    }\n    else\n    {\n      console.log(\"NoData\");\n    }\n  }\n\n   GetAuctionOwner = async ()=>\n  {\n    \n    const addr = await this.state.auction_contract.methods.GetOwner().call(); // get address from contract\n    this.setState({auction_owner:addr}); // set owner address to state\n    this.props.Redux_setOwner(\"setAuctionOwner\",addr); // save to redux\n    \n    \n  }\n\n  constructor(props){\n    super(props)\n    this.state={\n      auction_owner : '0x00',\n      auction_contract:{},\n      connected_account:'0x00',\n      loading:true\n      \n    };\n  }\n  render(){\n    let content\n    {\n      this.state.loading ?content = <h1>Wait Please , Loading Data.... </h1>\n      :\n      content=\n      <div>\n        <Main/>\n        </div>\n    }\n  return(\n    <div>\n      {content}\n    </div>\n    \n  );\n  }\n}\n\nconst mapStatetoProps=(props)=>{\n     return{\n        owner_acc_store : props.auction_owner, // get state from redux\n        connected_acc_store:props.connected_account\n     }\n}\nconst mapPropstoState =(dispatch)=>{\n    return{\n        Redux_setOwner :(type,obj)=>dispatch({type,obj}), // set state in redux\n        Redux_setContract :(type,obj)=>dispatch({type,obj}), // set state in redux\n        Redux_setConnectedAccount :(type,obj)=>dispatch({type,obj}) // set state in redux\n    }\n}\nexport default connect(mapStatetoProps,mapPropstoState)(App);\n\n","D:\\BlockChain Projects\\Auction Dapp Msc Project\\auction-dapp\\src\\Components\\Redux\\ReduxMain.js",["30","31"],[],"D:\\BlockChain Projects\\Auction Dapp Msc Project\\auction-dapp\\src\\Components\\Navbar.js",[],[],"D:\\BlockChain Projects\\Auction Dapp Msc Project\\auction-dapp\\src\\Components\\Main.js",[],[],{"ruleId":"32","severity":1,"message":"33","line":44,"column":21,"nodeType":"34","messageId":"35","endLine":44,"endColumn":31},{"ruleId":"36","severity":1,"message":"37","line":77,"column":5,"nodeType":"38","messageId":"39","endLine":84,"endColumn":6},{"ruleId":"40","severity":1,"message":"41","line":2,"column":7,"nodeType":"42","messageId":"43","endLine":2,"endColumn":12},{"ruleId":"40","severity":1,"message":"44","line":32,"column":7,"nodeType":"42","messageId":"43","endLine":32,"endColumn":21},"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-unused-vars","'redux' is assigned a value but never used.","Identifier","unusedVar","'TaskSubscriber' is assigned a value but never used."]